#!/bin/bash
# Installs the latest release of d2 from https://github.com/terrastruct/d2 to
# ~/.local without requiring root access.
#
# Note that the downloaded tar file is not removed and can be found in either
# ~/Downloads or /tmp.

set -e

declare REPO=terrastruct/d2
declare NAME_EXE=d2
declare NAME_MAN=d2.1
declare TARGETDIR_EXE="$HOME/.local/bin"
declare TARGETDIR_MAN="$HOME/.local/share/man/man1"

declare OS
declare ARCH
declare TEMPDIR

die() {
	printf '%s: %s\n' "${0##*/}" "$1" >&2
	exit 1
}

determine_system() {
	case $(uname -s) in
	Linux*) OS=linux ;;
	Darwin*) OS=macos ;;
	*) die "unsupported OS" ;;
	esac

	case $(uname -m) in
	aarch64) ARCH=arm64 ;;
	x86_64) ARCH=amd64 ;;
	*) die "unsupported architecture" ;;
	esac
}

download() {
	url=$(curl -sSL "https://api.github.com/repos/$REPO/releases/latest" |
		jq -r --arg os "$OS" --arg arch "$ARCH" '
			.assets[] |
			select(.name | contains($os) and contains($arch) and endswith(".tar.gz")) |
			.browser_download_url')

	[[ -z $url ]] && die "error fetching download url"

	path="$HOME/Downloads/${url##*/}"
	mkdir -p "$HOME/Downloads"
	curl -#Lo "$path" "$url"

	TEMPDIR=$(mktemp -d)
	trap 'rm -rf -- "$TEMPDIR"' EXIT
	tar -xf "$path" -C "$TEMPDIR"

	printf '%s -> %s\n' "$REPO" "$path" >&2
}

install() {
	mkdir -p "$TARGETDIR_EXE"
	find "$TEMPDIR" -type f -name "$NAME_EXE" -exec mv -t "$TARGETDIR_EXE" {} + ||
		die "error moving executable"
	printf '%s -> %s\n' "$NAME_EXE" "$TARGETDIR_EXE/$NAME_EXE" >&2

	mkdir -p "$TARGETDIR_MAN"
	find "$TEMPDIR" -type f -name "$NAME_MAN" -exec mv -t "$TARGETDIR_MAN" {} + ||
		die "error moving man page"
	printf '%s -> %s\n' "$NAME_MAN" "$TARGETDIR_MAN/$NAME_MAN" >&2
}

determine_system
download
install
